// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Block              = require("bs-platform/lib/js/block.js");
var Curry              = require("bs-platform/lib/js/curry.js");
var React              = require("react");
var ReasonReact        = require("reason-react/src/ReasonReact.js");
var Util$ReactTemplate = require("./Util.bs.js");

var component = ReasonReact.reducerComponent("TaskDraft");

function maybeConflictMessage(conflict) {
  if (conflict) {
    return React.createElement("div", {
                className: "conflict"
              }, Util$ReactTemplate.str(conflict[0]));
  } else {
    return React.createElement("div", undefined);
  }
}

function make(conflict, draftSubmit, _) {
  var click = function (_, param) {
    var state = param[/* state */2];
    return Curry._1(draftSubmit, /* record */[
                /* id */state[/* editingId */1],
                /* dependencies */state[/* editingDependencies */2]
              ]);
  };
  var newrecord = component.slice();
  newrecord[/* render */9] = (function (self) {
      return React.createElement("div", {
                  className: "draft"
                }, maybeConflictMessage(conflict), React.createElement("input", {
                      placeholder: "Task name",
                      value: self[/* state */2][/* editingId */1],
                      onChange: (function ($$event) {
                          return Curry._1(self[/* send */4], /* EditId */[$$event.target.value]);
                        })
                    }), React.createElement("button", {
                      onClick: Curry._1(self[/* handle */0], click)
                    }, Util$ReactTemplate.str("Add Task")));
    });
  newrecord[/* initialState */10] = (function () {
      return /* record */[
              /* nextId */0,
              /* editingId */"",
              /* editingDependencies : [] */0
            ];
    });
  newrecord[/* reducer */12] = (function (action, state) {
      return /* Update */Block.__(0, [/* record */[
                  /* nextId */state[/* nextId */0],
                  /* editingId */action[0],
                  /* editingDependencies */state[/* editingDependencies */2]
                ]]);
    });
  return newrecord;
}

exports.component            = component;
exports.maybeConflictMessage = maybeConflictMessage;
exports.make                 = make;
/* component Not a pure module */
